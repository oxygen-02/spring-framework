apply plugin: 'idea'
apply plugin: 'war' // 引入war插件, 它默认包含java插件
apply plugin: 'com.bmuschko.tomcat' //tomcat: 插件

// tomcat: 以下配置会在第一次启动时下载插件二进制文件
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.5'
    }
}

dependencies {
    compile(project(":spring-context"))

    compile(project(":spring-aop"))
    compile(project(":spring-aspects"))

    compile(project(":spring-jdbc"))

    compile(project(":spring-web"))
    compile(project(":spring-webmvc"))

    // 在非测试包也引入单元测试
    implementation("junit:junit:4.12")

    implementation 'cn.hutool:hutool-all:5.4.7'

    // 引入lombok
    implementation 'org.projectlombok:lombok:1.18.4'
    // slf4j、logback
    implementation 'ch.qos.logback:logback-classic:1.1.7'
    // dbcp数据库连接池
    implementation 'commons-dbcp:commons-dbcp:1.4'
    // 高版本的mysql的驱动
    implementation 'mysql:mysql-connector-java:8.0.21'
    // mybatis、mybatis-spring
    implementation 'org.mybatis:mybatis:3.4.1'
    implementation 'org.mybatis:mybatis-spring:1.3.1'

    // 文件上传
    implementation 'commons-io:commons-io:2.4'
    implementation 'commons-fileupload:commons-fileupload:1.3.1'
    
    // servlet规范和jsp
    providedCompile "javax.servlet:javax.servlet-api:4.0.1"
    providedCompile 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.2-b02'

    // 引入jstl标签库
    implementation "org.apache.taglibs:taglibs-standard-jstlel:1.2.5"
    implementation "org.apache.taglibs:taglibs-standard-jstlel:1.2.5"

    // tomcat: 将Tomcat运行时库添加到配置tomcat中: (此处为Tomcat9)
    def tomcatVersion = '9.0.1'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:9.0.0.M6",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

sourceSets {
    main{
        resources {
            srcDirs 'src/main/java' //可以将java目录下的所有非.java资源打包到classes下
        }
    }
}

// tomcat: 一些协议设置
tomcat {
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'
}